// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The goal of this task is to implement REST API and SPA to cover the described OpenAPI specification.",
    "title": "Yadro Impulse Test Task",
    "contact": {
      "url": "https://edu.yadro.com/impulse/",
      "email": "edu@yadro.com"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/pet": {
      "get": {
        "description": "Get existing pet",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet"
        ],
        "operationId": "GetPet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PetProperties"
            }
          },
          "204": {
            "description": "No pet uploaded yet"
          }
        }
      },
      "put": {
        "description": "Upload new pet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet"
        ],
        "operationId": "UploadPet",
        "parameters": [
          {
            "description": "Pet properties",
            "name": "petProperties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PetProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Delete uploaded pet",
        "operationId": "DeletePet",
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "PetProperties": {
      "type": "object",
      "required": [
        "ascii",
        "description"
      ],
      "properties": {
        "ascii": {
          "description": "Pet photo in ASCII art format",
          "type": "string",
          "minLength": 1,
          "x-nullable": false
        },
        "description": {
          "description": "Description of pet on the photo",
          "type": "string",
          "minLength": 1,
          "x-nullable": false
        }
      },
      "example": {
        "ascii": "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠟⠛⠛⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠛⣷⡄⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡶⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠛⠂⠀⠀⢰⠇⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⣰⣶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⣀⣀⡀⠀⠀\n⢀⣀⣀⣀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⢠⣦⠀⠀⠀⠀⢰⡇⠀⣿⠁⠀⠉⠻⣦⡀⠠⠟⠀⠀⠀⠀⣿⣧⣶⠿⠛⠙⣿⠀⠀\n⣿⡋⠉⠙⠛⠷⣦⣄⠀⠀⣿⡇⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠈⠻⣦⣀⣀⣀⣀⣰⣿⠟⠁⠀⠀⠀⣿⠀⠀\n⠸⣷⡀⠀⠀⠀⠈⠛⣷⡄⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⢸⣇⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⣿⡀⠀\n⠀⠘⢿⣆⠀⠀⠀⠀⠈⢿⣿⡇⠀⠀⠀⠀⠀⠐⠟⠀⠀⠀⠀⡀⠀⢀⣴⡿⠃⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠙⣷⡄\n⠀⠀⠀⠙⢷⣤⡀⠀⠀⠈⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⠇⠀⣼⡏⠀⠀⠀⠀⣾⣅⣀⣿⠀⠀⠀⠀⠀⠀⠀⣾⣅⢈⣷⠀⠀⠈⣿\n⠀⠀⠀⠀⠀⠙⠿⣦⣀⠀⢸⡇⠀⠀⠀⠀⣰⡄⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠘⠻⠿⠟⠀⠀⠠⣖⢒⡶⠀⠙⠿⠿⠟⠀⠀⠀⣿\n⠀⠀⠀⠀⠀⠀⠀⠈⠛⢷⣾⡇⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⢈⣏⠀⠀⠀⠀⡀⠀⠀⠀⢀⣿\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⡇⠀⠀⠀⠀⠀⠠⡆⠀⠀⠀⢰⡆⠀⠀⢻⣧⡀⠀⠀⠀⠀⠈⠻⠶⣤⡴⠟⠙⠶⣤⡤⠞⠁⠀⠀⢀⣾⠏\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣧⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣙⣿⣶⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣤⣤⣶⠿⠋⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡟⠉⠉⠛⣿⠛⢻⠿⠿⠿⠿⣿⡿⠿⠛⠛⠛⠛⠛⣿⠛⠉⠙⠛⣿⠛⠛⣿⠟⠛⠛⢻⡏⠉⠉⠉⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣦⣀⣤⡾⠃⠀⣿⣀⣀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⢿⣄⣀⣀⣴⠟⠀⠀⣿⠀⠀⢀⣾⠃⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠙⠷⠶⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀",
        "description": "The nyan cat"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The goal of this task is to implement REST API and SPA to cover the described OpenAPI specification.",
    "title": "Yadro Impulse Test Task",
    "contact": {
      "url": "https://edu.yadro.com/impulse/",
      "email": "edu@yadro.com"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/pet": {
      "get": {
        "description": "Get existing pet",
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet"
        ],
        "operationId": "GetPet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PetProperties"
            }
          },
          "204": {
            "description": "No pet uploaded yet"
          }
        }
      },
      "put": {
        "description": "Upload new pet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet"
        ],
        "operationId": "UploadPet",
        "parameters": [
          {
            "description": "Pet properties",
            "name": "petProperties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PetProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Delete uploaded pet",
        "operationId": "DeletePet",
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "PetProperties": {
      "type": "object",
      "required": [
        "ascii",
        "description"
      ],
      "properties": {
        "ascii": {
          "description": "Pet photo in ASCII art format",
          "type": "string",
          "minLength": 1,
          "x-nullable": false
        },
        "description": {
          "description": "Description of pet on the photo",
          "type": "string",
          "minLength": 1,
          "x-nullable": false
        }
      },
      "example": {
        "ascii": "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠟⠛⠛⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠛⣷⡄⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡇⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡶⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠛⠂⠀⠀⢰⠇⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⣰⣶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡏⠀⠀⣀⣀⡀⠀⠀\n⢀⣀⣀⣀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⢠⣦⠀⠀⠀⠀⢰⡇⠀⣿⠁⠀⠉⠻⣦⡀⠠⠟⠀⠀⠀⠀⣿⣧⣶⠿⠛⠙⣿⠀⠀\n⣿⡋⠉⠙⠛⠷⣦⣄⠀⠀⣿⡇⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠈⠻⣦⣀⣀⣀⣀⣰⣿⠟⠁⠀⠀⠀⣿⠀⠀\n⠸⣷⡀⠀⠀⠀⠈⠛⣷⡄⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⢸⣇⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⣿⡀⠀\n⠀⠘⢿⣆⠀⠀⠀⠀⠈⢿⣿⡇⠀⠀⠀⠀⠀⠐⠟⠀⠀⠀⠀⡀⠀⢀⣴⡿⠃⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠙⣷⡄\n⠀⠀⠀⠙⢷⣤⡀⠀⠀⠈⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⠇⠀⣼⡏⠀⠀⠀⠀⣾⣅⣀⣿⠀⠀⠀⠀⠀⠀⠀⣾⣅⢈⣷⠀⠀⠈⣿\n⠀⠀⠀⠀⠀⠙⠿⣦⣀⠀⢸⡇⠀⠀⠀⠀⣰⡄⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠘⠻⠿⠟⠀⠀⠠⣖⢒⡶⠀⠙⠿⠿⠟⠀⠀⠀⣿\n⠀⠀⠀⠀⠀⠀⠀⠈⠛⢷⣾⡇⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⢠⡄⠀⠀⠀⢈⣏⠀⠀⠀⠀⡀⠀⠀⠀⢀⣿\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⡇⠀⠀⠀⠀⠀⠠⡆⠀⠀⠀⢰⡆⠀⠀⢻⣧⡀⠀⠀⠀⠀⠈⠻⠶⣤⡴⠟⠙⠶⣤⡤⠞⠁⠀⠀⢀⣾⠏\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣧⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣙⣿⣶⣤⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣤⣤⣶⠿⠋⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡟⠉⠉⠛⣿⠛⢻⠿⠿⠿⠿⣿⡿⠿⠛⠛⠛⠛⠛⣿⠛⠉⠙⠛⣿⠛⠛⣿⠟⠛⠛⢻⡏⠉⠉⠉⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣦⣀⣤⡾⠃⠀⣿⣀⣀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀⢿⣄⣀⣀⣴⠟⠀⠀⣿⠀⠀⢀⣾⠃⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠙⠷⠶⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀",
        "description": "The nyan cat"
      }
    }
  }
}`))
}
